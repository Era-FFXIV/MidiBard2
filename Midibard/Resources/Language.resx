<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button import file" xml:space="preserve">
    <value>Import midi file
Right click to select file dialog type</value>
  </data>
  <data name="button import folder" xml:space="preserve">
    <value>Import folder
Imports all midi files in selected folder and it's all subfolders.
This may take a while when you select a folder that contains multiple layers of folders.</value>
  </data>
  <data name="button clear playlist" xml:space="preserve">
    <value>Clear Playlist</value>
  </data>
  <data name="label language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Change UI Language" xml:space="preserve">
    <value>Change UI Language</value>
  </data>
  <data name="label Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="label ensemble mode running" xml:space="preserve">
    <value>Ensemble Mode Running</value>
  </data>
  <data name="label empty playlist" xml:space="preserve">
    <value>Import midi files to start performing!</value>
  </data>
  <data name="{0} tracks in playlist." xml:space="preserve">
    <value>{0} tracks in current playlist.</value>
    
  </data>
  <data name="Playing:" xml:space="preserve">
    <value>Playing:</value>
  </data>
  <data name="{0} track in playlist." xml:space="preserve">
    <value>{0} track in playlist.</value>
    
  </data>
  <data name="Playmode:" xml:space="preserve">
    <value>Playmode: </value>
  </data>
  <data name="Playmode_Single" xml:space="preserve">
    <value>Single</value>
  </data>
  <data name="ListOrdered" xml:space="preserve">
    <value>ListOrdered</value>
  </data>
  <data name="ListRepeat" xml:space="preserve">
    <value>ListRepeat</value>
  </data>
  <data name="SingleRepeat" xml:space="preserve">
    <value>SingleRepeat</value>
  </data>
  <data name="Random" xml:space="preserve">
    <value>Random</value>
  </data>
  <data name="Music control panel" xml:space="preserve">
    <value>Music control panel</value>
  </data>
  <data name="Settings panel" xml:space="preserve">
    <value>Settings panel</value>
  </data>
  <data name="button mini player" xml:space="preserve">
    <value>Mini player</value>
  </data>
  <data name="Track selection Tooltip" xml:space="preserve">
    <value>Track Selection
MidiBard will only perform enabled tracks
Left click to enable/disable a track, Right click to solo it</value>
  </data>
  <data name="Track" xml:space="preserve">
    <value>Track</value>
  </data>
  <data name="Transpose" xml:space="preserve">
    <value>Transpose</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Auto adapt notes" xml:space="preserve">
    <value>Auto adapt notes</value>
  </data>
  <data name="Auto adapt notesTooltip" xml:space="preserve">
    <value>Adapt high/low pitch notes which are out of range into 3 octaves we can play</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="PlaySpeed" xml:space="preserve">
    <value>PlaySpeed</value>
  </data>
  <data name="Monitor ensemble" xml:space="preserve">
    <value>Monitor ensemble</value>
  </data>
  <data name="Monitor ensemble tooltip" xml:space="preserve">
    <value>Auto start ensemble when entering in-game party ensemble mode</value>
  </data>
  <data name="Auto Confirm Ensemble Ready Check" xml:space="preserve">
    <value>Auto Confirm Ensemble Ready Check</value>
  </data>
  <data name="Auto open MidiBard" xml:space="preserve">
    <value>Auto open MidiBard</value>
  </data>
  <data name="Auto open MidiBardTooltip" xml:space="preserve">
    <value>Auto open or close MidiBard window when entering/exiting performance mode</value>
  </data>
  <data name="Import in progress..." xml:space="preserve">
    <value>Import in progress...</value>
  </data>
  <data name="Instrument" xml:space="preserve">
    <value>Instrument</value>
  </data>
  <data name="Auto switch instrument" xml:space="preserve">
    <value>Auto switch instrument</value>
  </data>
  <data name="Auto transpose" xml:space="preserve">
    <value>Auto transpose</value>
  </data>
  <data name="Auto switch instrumentTooltip" xml:space="preserve">
    <value>Auto switch instrument on demand. If you need this, 
please add #instrument name# before file name. 
E.g. #harp#demo.mid</value>
  </data>
  <data name="Auto transpose notesTooltip" xml:space="preserve">
    <value>Auto transpose notes on demand. If you need this, 
please add #transpose number# before file name. 
E.g. #-12#demo.mid</value>
  </data>
  <data name="TransposeTooltip" xml:space="preserve">
    <value>Transpose, measured by semitone. 
Right click to reset.</value>
  </data>
  <data name="Set speed tooltip" xml:space="preserve">
    <value>Set the speed of events playing</value>
  </data>
  <data name="Set progress tooltip" xml:space="preserve">
    <value>Set the playing progress 
Right click to restart current playback</value>
  </data>
  <data name="select instrument tooltip" xml:space="preserve">
    <value>Select current instrument 
Right click to quit performance mode</value>
  </data>
  <data name="listenning midi device banner" xml:space="preserve">
    <value>Listening input device: </value>
  </data>
  <data name="label inputdevice" xml:space="preserve">
    <value>Input Device</value>
  </data>
  <data name="label inputdevice tooltip" xml:space="preserve">
    <value>Choose external midi input device. right click to reset.</value>
  </data>
  <data name="button clearplaylist tootltip" xml:space="preserve">
    <value>Double click to clear playlist</value>
  </data>
  <data name="label search playlist" xml:space="preserve">
    <value>Search playlist</value>
  </data>
  <data name="label theme color" xml:space="preserve">
    <value>Theme color</value>
  </data>
  <data name="hint search textbox" xml:space="preserve">
    <value>Enter to search</value>
  </data>
  <data name="label delay" xml:space="preserve">
    <value>Delay</value>
  </data>
  <data name="label delay tooltip" xml:space="preserve">
    <value>Delay time before play next track.</value>
  </data>
  <data name="label transpose by track" xml:space="preserve">
    <value>Transpose per track</value>
  </data>
  <data name="label transpose by track tootltip" xml:space="preserve">
    <value>Transpose per track, right click to reset all tracks' transpose offset back to zero.</value>
  </data>
  <data name="checkbox auto restart listening" xml:space="preserve">
    <value>Auto restart listening</value>
  </data>
  <data name="checkbox auto restart listening tooltip" xml:space="preserve">
    <value>Try auto restart listening last used midi device</value>
  </data>
  <data name="visualization" xml:space="preserve">
    <value>Tracks visualization</value>
  </data>
  <data name="visualization tooltip" xml:space="preserve">
    <value>Right click to reset visualizer window position.</value>
  </data>
  <data name="Follow playback" xml:space="preserve">
    <value>Follow playback</value>
  </data>
  <data name="Follow playback tooltip" xml:space="preserve">
    <value>Lock tracks window and auto following current playback progress</value>
  </data>
  <data name="w32 file dialog" xml:space="preserve">
    <value>Win32 file dialog</value>
  </data>
  <data name="imgui file dialog" xml:space="preserve">
    <value>ImGui file dialog</value>
  </data>
  <data name="tone mode" xml:space="preserve">
    <value>Tone mode</value>
  </data>
  <data name="tone mode tooltip" xml:space="preserve">
    <value>Choose how MidiBard will handle MIDI channels and ProgramChange events(current only affects guitar tone changing)</value>
  </data>
  <data name="tone mode off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="tone mode standard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="tone mode simple" xml:space="preserve">
    <value>Simple</value>
  </data>
  <data name="tone mode override" xml:space="preserve">
    <value>Override</value>
  </data>
  <data name="tone mode off tooltip" xml:space="preserve">
    <value>Off: Does not take over game's guitar tone control.</value>
  </data>
  <data name="tone mode standard tooltip" xml:space="preserve">
    <value>Standard: Standard midi channel and ProgramChange handling, each channel will keep it's program state separately.</value>
  </data>
  <data name="tone mode simple tooltip" xml:space="preserve">
    <value>Simple: Simple ProgramChange handling, ProgramChange event on any channel will change all channels' program state. (This is BardMusicPlayer's default behavior.)</value>
  </data>
  <data name="tone mode override tooltip" xml:space="preserve">
    <value>Override by track: Assign guitar tone manually for each track and ignore ProgramChange events.</value>
  </data>
  <data name="label auto switch instrument bmp" xml:space="preserve">
    <value>Auto switch instrument by midi track name</value>
  </data>
  <data name="label auto switch instrument bmp tooltip" xml:space="preserve">
    <value>Transpose/switch instrument based on first enabled midi track name.</value>
  </data>
  <data name="notice start event listening" xml:space="preserve">
    <value>Start event listening on </value>
  </data>
  <data name="notice midi device error" xml:space="preserve">
    <value>"{0}" is not available now.
Please check log for further error information.</value>
  </data>
  <data name="notice midi device stop listening" xml:space="preserve">
    <value>Stop event listening on </value>
  </data>
  <data name="button ensemble panel" xml:space="preserve">
    <value>Ensemble panel</value>
  </data>
  <data name="Low latency mode" xml:space="preserve">
    <value>Low latency mode</value>
  </data>
  <data name="low latency mode tooltip" xml:space="preserve">
    <value>Use alternative note input method, May slightly reduce input latency but will affect guitar tone switching accuracy. 
Only recommended while using Midi keyboard.</value>
  </data>
  <data name="Auto set background frame limit" xml:space="preserve">
    <value>Auto set background frame limit</value>
  </data>
  <data name="Auto set frame limit tooltip" xml:space="preserve">
    <value>Auto disable background frame limit when entering performance mode and re-enable it when quit performance</value>
  </data>
  <data name="playlist window title" xml:space="preserve">
    <value>MidiBard Playlist</value>
  </data>
  <data name="button show playlist selector" xml:space="preserve">
    <value>Show playlist selector</value>
  </data>
  <data name="New playlist" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="Clone current playlist" xml:space="preserve">
    <value>Clone current playlist</value>
  </data>
  <data name="Save search as playlist" xml:space="preserve">
    <value>Save current search result as new playlist</value>
  </data>
  <data name="Save and sync" xml:space="preserve">
    <value>Save and sync</value>
  </data>
  <data name="delete current playlist" xml:space="preserve">
    <value>Double click to delete current playlist</value>
  </data>
  <data name="Standalone playlist window" xml:space="preserve">
    <value>Standalone playlist window</value>
  </data>
  <data name="ensemble window title" xml:space="preserve">
    <value>MidiBard local ensemble control</value>
  </data>
  <data name="Stop ensemble" xml:space="preserve">
    <value>Stop ensemble</value>
  </data>
  <data name="Begin ensemble ready check" xml:space="preserve">
    <value>Begin ensemble ready check</value>
  </data>
  <data name="ensemble update instruments" xml:space="preserve">
    <value>Update Instruments, right click to pull back instrument</value>
  </data>
  <data name="ensemble open midi config directory" xml:space="preserve">
    <value>Open current midi config file directory</value>
  </data>
  <data name="ensemble open midi config file" xml:space="preserve">
    <value>Open current midi config file</value>
  </data>
  <data name="ensemble Delete and reset current file config" xml:space="preserve">
    <value>Delete and reset current file config</value>
  </data>
  <data name="ensemble unmute other clients" xml:space="preserve">
    <value>Unmute other clients</value>
  </data>
  <data name="ensemble mute other clients" xml:space="preserve">
    <value>Mute other clients</value>
  </data>
  <data name="ensemble Minimize other clients" xml:space="preserve">
    <value>Minimize other clients, right click to restore them.</value>
  </data>
  <data name="ensemble Sync settings" xml:space="preserve">
    <value>Sync all Midibard settings on this pc</value>
  </data>
  <data name="ensemble Save default performers" xml:space="preserve">
    <value>Save default performers</value>
  </data>
  <data name="ensemble Select a song from playlist" xml:space="preserve">
    <value>Select a song from playlist</value>
  </data>
  <data name="ensemble assign track character tooltip" xml:space="preserve">
    <value>Assign track to a character. Right click to reset assigned character</value>
  </data>
  <data name="ensemble config Draw ensemble progress indicator on visualizer" xml:space="preserve">
    <value>Draw ensemble progress indicator on visualizer</value>
  </data>
  <data name="ensemble config Ensemble indicator delay" xml:space="preserve">
    <value>Ensemble indicator delay</value>
  </data>
  <data name="ensemble config Update instrument when begin ensemble" xml:space="preserve">
    <value>Update instrument when begin ensemble</value>
  </data>
  <data name="window title visualizor" xml:space="preserve">
    <value>MidiBard track visualizer</value>
  </data>
</root>